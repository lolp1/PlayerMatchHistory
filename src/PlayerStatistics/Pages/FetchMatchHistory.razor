@page "/fetchmatchdata"
@using PlayerStatistics.Data
@inject PlayerStatsService PlayerStatsService

<PageTitle>Match History</PageTitle>

<h1 class="alert alert-secondary mt-4 text-center">Match History</h1>

@if (playerstats == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container m-lg-3">
        <table class="table table-dark table-striped">
            <thead>
                <tr>
                    <th scope="col">Kills</th>
                    <th scope="col">Deaths</th>
                    <th scope="col">Damage Dealt</th>
                    <th scope="col">Damage Taken</th>
                    <th scope="col">Games Won</th>
                    <th scope="col">Games Lost</th>
                    <th scope="col">Games Played</th>
                    <th scope="col">Time Played</th>
                </tr>
            </thead>
            <tbody>
                <!-- Player statistics rows will go here -->
                @foreach (var playerstat in playerstats)
                {
                    playerstat.GamesPlayed = playerstat.GamesWon + playerstat.GamesLost;
                    <tr>
                        <td>@playerstat.Kills</td>
                        <td>@playerstat.Deaths</td>
                        <td>@playerstat.DamageDealt</td>
                        <td>@playerstat.DamageTaken</td>
                        <td>@playerstat.GamesWon</td>
                        <td>@playerstat.GamesLost</td>
                        <td>@playerstat.GamesPlayed</td>
                        <td>@playerstat.TimePlayed.ToString()</td>
                    </tr>
                }
                <!-- Add more player rows as needed -->
            </tbody>
        </table>
    </div>
}

@code {
    private PlayerStats[]? playerstats;

    protected override async Task OnInitializedAsync()
    {
        playerstats = await PlayerStatsService.GetPlayerMatchHistoryAsync();
    }
}
